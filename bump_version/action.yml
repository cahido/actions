name: "Poetry Version Bump"
description: Bump Poetry version, commit, and tag

inputs:
  bump:
    description: "Which bump to apply (patch, minor, major)"
    required: true
    default: "patch"

  git_user_name:
    description: "Git user.name to use for commits"
    required: false
    default: "github-actions[bot]"

  git_user_email:
    description: "Git user.email to use for commits"
    required: false
    default: "github-actions[bot]@users.noreply.github.com"

outputs:
  version:
    description: "The new version after bump"
    value: ${{ steps.bump.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: Check if last commit was a version bump
      id: last
      shell: bash
      run: |
        LAST_MSG=$(git log -1 --pretty=%B)
        echo "Last commit message: $LAST_MSG"
        if echo "$LAST_MSG" | grep -q "^Bump version to"; then
          echo "bump=true" >> $GITHUB_OUTPUT
        else
          echo "bump=false" >> $GITHUB_OUTPUT
        fi

    - name: Install Poetry
      if: steps.last.outputs.bump == 'true'
      shell: bash
      run: pip install poetry

    - name: Bump version
      if: steps.last.outputs.bump == 'true'
      id: bump
      shell: bash
      run: |
        poetry version ${{ inputs.bump }}
        VERSION=$(poetry version -s)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Commit and tag
      if: steps.last.outputs.bump == 'true'
      shell: bash
      run: |
        VERSION=${{ steps.bump.outputs.version }}
        git config user.name "${{ inputs.git_user_name }}"
        git config user.email "${{ inputs.git_user_email }}"
        git add pyproject.toml
        git commit -m "Bump version to $VERSION"
        git tag "v$VERSION"
        git push origin HEAD --tags
